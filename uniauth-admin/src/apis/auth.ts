/**
 * Generated by orval v7.14.0 🍺
 * Do not edit manually.
 */

import { customApiMutator } from "../utils/api-mutator";
import type {
  GetAuthChatQuotaPoolsModelsParams,
  GetAuthQuotaPoolsAllParams,
  GetAuthQuotaPoolsUsersParams,
  UniauthGfApiAuthV1CheckAndExplainReq,
  UniauthGfApiAuthV1CheckAndExplainRes,
  UniauthGfApiAuthV1CheckReq,
  UniauthGfApiAuthV1CheckRes,
  UniauthGfApiAuthV1GetAllQuotaPoolsRes,
  UniauthGfApiAuthV1GetAllUsersForQuotaPoolRes,
  UniauthGfApiAuthV1GetAvailableModelForQuotaPoolRes,
} from "./uniauth.schemas";

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

export const getAuth = () => {
  /**
   * 动态获取指定配额池的可用模型。
   * @summary 获取所属配额池的可用模型
   */
  const getAuthChatQuotaPoolsModels = (
    params: GetAuthChatQuotaPoolsModelsParams,
    options?: SecondParameter<
      typeof customApiMutator<UniauthGfApiAuthV1GetAvailableModelForQuotaPoolRes>
    >,
  ) => {
    return customApiMutator<UniauthGfApiAuthV1GetAvailableModelForQuotaPoolRes>(
      { url: `/auth/chat/quotaPools/models`, method: "GET", params },
      options,
    );
  };
  /**
   * 给定sub obj act，查询是否有权限。
   * @summary 基础权限检查
   */
  const postAuthCheck = (
    uniauthGfApiAuthV1CheckReq: UniauthGfApiAuthV1CheckReq,
    options?: SecondParameter<
      typeof customApiMutator<UniauthGfApiAuthV1CheckRes>
    >,
  ) => {
    return customApiMutator<UniauthGfApiAuthV1CheckRes>(
      {
        url: `/auth/check`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: uniauthGfApiAuthV1CheckReq,
      },
      options,
    );
  };
  /**
   * 给定sub obj act，如果允许，返回使其允许的规则。
   * @summary 解释权限来源
   */
  const postAuthCheckEx = (
    uniauthGfApiAuthV1CheckAndExplainReq: UniauthGfApiAuthV1CheckAndExplainReq,
    options?: SecondParameter<
      typeof customApiMutator<UniauthGfApiAuthV1CheckAndExplainRes>
    >,
  ) => {
    return customApiMutator<UniauthGfApiAuthV1CheckAndExplainRes>(
      {
        url: `/auth/checkEx`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: uniauthGfApiAuthV1CheckAndExplainReq,
      },
      options,
    );
  };
  /**
   * 动态获取用户属于哪些配额池。
   * @summary 获取所属配额池
   */
  const getAuthQuotaPoolsAll = (
    params: GetAuthQuotaPoolsAllParams,
    options?: SecondParameter<
      typeof customApiMutator<UniauthGfApiAuthV1GetAllQuotaPoolsRes>
    >,
  ) => {
    return customApiMutator<UniauthGfApiAuthV1GetAllQuotaPoolsRes>(
      { url: `/auth/quotaPools/all`, method: "GET", params },
      options,
    );
  };
  /**
   * 动态获取指定配额池的用户。
   * @summary 获取所属配额池的用户
   */
  const getAuthQuotaPoolsUsers = (
    params: GetAuthQuotaPoolsUsersParams,
    options?: SecondParameter<
      typeof customApiMutator<UniauthGfApiAuthV1GetAllUsersForQuotaPoolRes>
    >,
  ) => {
    return customApiMutator<UniauthGfApiAuthV1GetAllUsersForQuotaPoolRes>(
      { url: `/auth/quotaPools/users`, method: "GET", params },
      options,
    );
  };
  return {
    getAuthChatQuotaPoolsModels,
    postAuthCheck,
    postAuthCheckEx,
    getAuthQuotaPoolsAll,
    getAuthQuotaPoolsUsers,
  };
};
export type GetAuthChatQuotaPoolsModelsResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getAuth>["getAuthChatQuotaPoolsModels"]>>
>;
export type PostAuthCheckResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getAuth>["postAuthCheck"]>>
>;
export type PostAuthCheckExResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getAuth>["postAuthCheckEx"]>>
>;
export type GetAuthQuotaPoolsAllResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getAuth>["getAuthQuotaPoolsAll"]>>
>;
export type GetAuthQuotaPoolsUsersResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getAuth>["getAuthQuotaPoolsUsers"]>>
>;
