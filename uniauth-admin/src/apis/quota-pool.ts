/**
 * Generated by orval v7.14.0 🍺
 * Do not edit manually.
 */

import { customApiMutator } from "../utils/api-mutator";
import type {
  DeleteQuotaPoolParams,
  GetQuotaPoolParams,
  UniauthGfApiQuotaPoolV1DeleteQuotaPoolRes,
  UniauthGfApiQuotaPoolV1EditQuotaPoolReq,
  UniauthGfApiQuotaPoolV1EditQuotaPoolRes,
  UniauthGfApiQuotaPoolV1EnsurePersonalQuotaPoolReq,
  UniauthGfApiQuotaPoolV1EnsurePersonalQuotaPoolRes,
  UniauthGfApiQuotaPoolV1FilterQuotaPoolReq,
  UniauthGfApiQuotaPoolV1FilterQuotaPoolRes,
  UniauthGfApiQuotaPoolV1NewQuotaPoolReq,
  UniauthGfApiQuotaPoolV1NewQuotaPoolRes,
  UniauthGfApiQuotaPoolV1RefreshUsersOfQuotaPoolReq,
  UniauthGfApiQuotaPoolV1RefreshUsersOfQuotaPoolRes,
  UniauthGfInternalModelEntityQuotapoolQuotaPool,
} from "./uniauth.schemas";

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

export const getQuotaPool = () => {
  /**
   * @summary 删除配额池
   */
  const deleteQuotaPool = (
    params: DeleteQuotaPoolParams,
    options?: SecondParameter<
      typeof customApiMutator<UniauthGfApiQuotaPoolV1DeleteQuotaPoolRes>
    >,
  ) => {
    return customApiMutator<UniauthGfApiQuotaPoolV1DeleteQuotaPoolRes>(
      { url: `/quotaPool`, method: "DELETE", params },
      options,
    );
  };
  /**
   * @summary 获取单个配额池详细配置
   */
  const getQuotaPool = (
    params: GetQuotaPoolParams,
    options?: SecondParameter<
      typeof customApiMutator<UniauthGfInternalModelEntityQuotapoolQuotaPool>
    >,
  ) => {
    return customApiMutator<UniauthGfInternalModelEntityQuotapoolQuotaPool>(
      { url: `/quotaPool`, method: "GET", params },
      options,
    );
  };
  /**
   * @summary 新建配额池
   */
  const postQuotaPool = (
    uniauthGfApiQuotaPoolV1NewQuotaPoolReq: UniauthGfApiQuotaPoolV1NewQuotaPoolReq,
    options?: SecondParameter<
      typeof customApiMutator<UniauthGfApiQuotaPoolV1NewQuotaPoolRes>
    >,
  ) => {
    return customApiMutator<UniauthGfApiQuotaPoolV1NewQuotaPoolRes>(
      {
        url: `/quotaPool`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: uniauthGfApiQuotaPoolV1NewQuotaPoolReq,
      },
      options,
    );
  };
  /**
   * 除了 quotaPoolName 字段必传之外，其他字段可以不传。不传的字段不会更新。
   * @summary 编辑配额池
   */
  const putQuotaPool = (
    uniauthGfApiQuotaPoolV1EditQuotaPoolReq: UniauthGfApiQuotaPoolV1EditQuotaPoolReq,
    options?: SecondParameter<
      typeof customApiMutator<UniauthGfApiQuotaPoolV1EditQuotaPoolRes>
    >,
  ) => {
    return customApiMutator<UniauthGfApiQuotaPoolV1EditQuotaPoolRes>(
      {
        url: `/quotaPool`,
        method: "PUT",
        headers: { "Content-Type": "application/json" },
        data: uniauthGfApiQuotaPoolV1EditQuotaPoolReq,
      },
      options,
    );
  };
  /**
   * @summary 确保个人配额池存在
   */
  const postQuotaPoolEnsure = (
    uniauthGfApiQuotaPoolV1EnsurePersonalQuotaPoolReq: UniauthGfApiQuotaPoolV1EnsurePersonalQuotaPoolReq,
    options?: SecondParameter<
      typeof customApiMutator<UniauthGfApiQuotaPoolV1EnsurePersonalQuotaPoolRes>
    >,
  ) => {
    return customApiMutator<UniauthGfApiQuotaPoolV1EnsurePersonalQuotaPoolRes>(
      {
        url: `/quotaPool/ensure`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: uniauthGfApiQuotaPoolV1EnsurePersonalQuotaPoolReq,
      },
      options,
    );
  };
  /**
   * 根据过滤条件筛选配额池，支持复杂条件查询、排序和分页
   * @summary 筛选配额池
   */
  const postQuotaPoolFilter = (
    uniauthGfApiQuotaPoolV1FilterQuotaPoolReq: UniauthGfApiQuotaPoolV1FilterQuotaPoolReq,
    options?: SecondParameter<
      typeof customApiMutator<UniauthGfApiQuotaPoolV1FilterQuotaPoolRes>
    >,
  ) => {
    return customApiMutator<UniauthGfApiQuotaPoolV1FilterQuotaPoolRes>(
      {
        url: `/quotaPool/filter`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: uniauthGfApiQuotaPoolV1FilterQuotaPoolReq,
      },
      options,
    );
  };
  /**
   * 给定配额池名称列表，根据配额池配置中的 UserInfos Rules，在 Casbin 中刷新组权限继承关系。'不传参数'则刷新所有配额池。如果传空数组，则没有任何操作！
   * @summary 刷新配额池的用户
   */
  const postQuotaPoolRefreshUsers = (
    uniauthGfApiQuotaPoolV1RefreshUsersOfQuotaPoolReq: UniauthGfApiQuotaPoolV1RefreshUsersOfQuotaPoolReq,
    options?: SecondParameter<
      typeof customApiMutator<UniauthGfApiQuotaPoolV1RefreshUsersOfQuotaPoolRes>
    >,
  ) => {
    return customApiMutator<UniauthGfApiQuotaPoolV1RefreshUsersOfQuotaPoolRes>(
      {
        url: `/quotaPool/refreshUsers`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: uniauthGfApiQuotaPoolV1RefreshUsersOfQuotaPoolReq,
      },
      options,
    );
  };
  return {
    deleteQuotaPool,
    getQuotaPool,
    postQuotaPool,
    putQuotaPool,
    postQuotaPoolEnsure,
    postQuotaPoolFilter,
    postQuotaPoolRefreshUsers,
  };
};
export type DeleteQuotaPoolResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getQuotaPool>["deleteQuotaPool"]>>
>;
export type GetQuotaPoolResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getQuotaPool>["getQuotaPool"]>>
>;
export type PostQuotaPoolResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getQuotaPool>["postQuotaPool"]>>
>;
export type PutQuotaPoolResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getQuotaPool>["putQuotaPool"]>>
>;
export type PostQuotaPoolEnsureResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getQuotaPool>["postQuotaPoolEnsure"]>>
>;
export type PostQuotaPoolFilterResult = NonNullable<
  Awaited<ReturnType<ReturnType<typeof getQuotaPool>["postQuotaPoolFilter"]>>
>;
export type PostQuotaPoolRefreshUsersResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getQuotaPool>["postQuotaPoolRefreshUsers"]>
  >
>;
