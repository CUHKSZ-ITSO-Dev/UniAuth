/**
 * Generated by orval v7.14.0 🍺
 * Do not edit manually.
 */

import { customApiMutator } from "../utils/api-mutator";
import type {
  UniauthGfApiAuthV1FilterGroupingsReq,
  UniauthGfApiAuthV1FilterGroupingsRes,
  UniauthGfApiAuthV1FilterPoliciesReq,
  UniauthGfApiAuthV1FilterPoliciesRes,
  UniauthGfApiAuthV1GetAllActionsRes,
  UniauthGfApiAuthV1GetAllObjectsRes,
  UniauthGfApiAuthV1GetAllRolesRes,
  UniauthGfApiAuthV1GetAllSubjectsRes,
} from "./uniauth.schemas";

type SecondParameter<T extends (...args: never) => unknown> = Parameters<T>[1];

export const getAuthAdminQuery = () => {
  /**
   * @summary 获取所有Actions
   */
  const getAuthAdminActionsAll = (
    options?: SecondParameter<
      typeof customApiMutator<UniauthGfApiAuthV1GetAllActionsRes>
    >,
  ) => {
    return customApiMutator<UniauthGfApiAuthV1GetAllActionsRes>(
      { url: `/auth/admin/actions/all`, method: "GET" },
      options,
    );
  };
  /**
   * 根据给定的条件，返回 Grouping Policies 角色继承关系。留空的字段（传空 Array）将被忽略。
   * @summary 筛选 Grouping Policies
   */
  const postAuthAdminGroupingsFilter = (
    uniauthGfApiAuthV1FilterGroupingsReq: UniauthGfApiAuthV1FilterGroupingsReq,
    options?: SecondParameter<
      typeof customApiMutator<UniauthGfApiAuthV1FilterGroupingsRes>
    >,
  ) => {
    return customApiMutator<UniauthGfApiAuthV1FilterGroupingsRes>(
      {
        url: `/auth/admin/groupings/filter`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: uniauthGfApiAuthV1FilterGroupingsReq,
      },
      options,
    );
  };
  /**
   * @summary 获取所有Objects
   */
  const getAuthAdminObjectsAll = (
    options?: SecondParameter<
      typeof customApiMutator<UniauthGfApiAuthV1GetAllObjectsRes>
    >,
  ) => {
    return customApiMutator<UniauthGfApiAuthV1GetAllObjectsRes>(
      { url: `/auth/admin/objects/all`, method: "GET" },
      options,
    );
  };
  /**
   * 模糊匹配。根据给定的条件，返回Policy。留空的字段（传空 Array）将被忽略。
   * @summary 筛选 Policies
   */
  const postAuthAdminPoliciesFilter = (
    uniauthGfApiAuthV1FilterPoliciesReq: UniauthGfApiAuthV1FilterPoliciesReq,
    options?: SecondParameter<
      typeof customApiMutator<UniauthGfApiAuthV1FilterPoliciesRes>
    >,
  ) => {
    return customApiMutator<UniauthGfApiAuthV1FilterPoliciesRes>(
      {
        url: `/auth/admin/policies/filter`,
        method: "POST",
        headers: { "Content-Type": "application/json" },
        data: uniauthGfApiAuthV1FilterPoliciesReq,
      },
      options,
    );
  };
  /**
   * @summary 获取所有 Roles
   */
  const getAuthAdminRolesAll = (
    options?: SecondParameter<
      typeof customApiMutator<UniauthGfApiAuthV1GetAllRolesRes>
    >,
  ) => {
    return customApiMutator<UniauthGfApiAuthV1GetAllRolesRes>(
      { url: `/auth/admin/roles/all`, method: "GET" },
      options,
    );
  };
  /**
   * @summary 获取所有Subjects
   */
  const getAuthAdminSubjectsAll = (
    options?: SecondParameter<
      typeof customApiMutator<UniauthGfApiAuthV1GetAllSubjectsRes>
    >,
  ) => {
    return customApiMutator<UniauthGfApiAuthV1GetAllSubjectsRes>(
      { url: `/auth/admin/subjects/all`, method: "GET" },
      options,
    );
  };
  return {
    getAuthAdminActionsAll,
    postAuthAdminGroupingsFilter,
    getAuthAdminObjectsAll,
    postAuthAdminPoliciesFilter,
    getAuthAdminRolesAll,
    getAuthAdminSubjectsAll,
  };
};
export type GetAuthAdminActionsAllResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getAuthAdminQuery>["getAuthAdminActionsAll"]>
  >
>;
export type PostAuthAdminGroupingsFilterResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getAuthAdminQuery>["postAuthAdminGroupingsFilter"]
    >
  >
>;
export type GetAuthAdminObjectsAllResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getAuthAdminQuery>["getAuthAdminObjectsAll"]>
  >
>;
export type PostAuthAdminPoliciesFilterResult = NonNullable<
  Awaited<
    ReturnType<
      ReturnType<typeof getAuthAdminQuery>["postAuthAdminPoliciesFilter"]
    >
  >
>;
export type GetAuthAdminRolesAllResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getAuthAdminQuery>["getAuthAdminRolesAll"]>
  >
>;
export type GetAuthAdminSubjectsAllResult = NonNullable<
  Awaited<
    ReturnType<ReturnType<typeof getAuthAdminQuery>["getAuthAdminSubjectsAll"]>
  >
>;
