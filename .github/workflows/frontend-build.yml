name: UniAuth 前端构建与 Docker 部署

on:
  push:
    tags:
      - "v*"

env:
  IMAGE_NAME: ghcr.io/cuhksz-itso-dev/uniauth-admin
  MANIFEST_REPO_OWNER: CUHKSZ-ITSO-Dev
  MANIFEST_REPO_NAME: GPT-Cluster
  MANIFEST_DEPLOY_BRANCH: main
  TAG: ${{ github.ref_name }}

permissions:
  contents: read
  packages: write

jobs:
  # Job1 构建前端静态资源
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Enable Corepack
        run: corepack enable

      - name: Setup pnpm cache
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('uniauth-admin/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        working-directory: uniauth-admin
        run: pnpm install --frozen-lockfile

      - name: Build Frontend
        working-directory: uniauth-admin
        run: pnpm run build

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: uniauth-admin-dist
          path: uniauth-admin/dist
          retention-days: 1

  # Job2 构建 Docker 镜像
  build-docker:
    needs: build-frontend
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v5

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: uniauth-admin-dist
          path: ./dist-temp

      - name: Prepare Docker context
        run: |
          rm -rf ./uniauth-admin/dist
          mv ./dist-temp ./uniauth-admin/dist

      - name: Verify Docker context
        run: |
          echo "Listing uniauth-admin directory:"
          ls -la uniauth-admin/
          echo "Listing dist directory:"
          ls -la uniauth-admin/dist/

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=tag
            type=semver,pattern=v{{major}}
            type=semver,pattern=v{{major}}.{{minor}}
          labels: |
            org.opencontainers.image.description=UniAuth Frontend Admin Panel (React, {{sha}}).
            org.opencontainers.image.created={{commit_date 'YYYY-MM-DDTHH:mm:ss.SSS[Z]'}}
            org.opencontainers.image.revision={{ sha }}
            org.opencontainers.image.version=v{{major}}.{{minor}}
            org.opencontainers.image.title=UniAuth Admin Frontend

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          provenance: false
          context: uniauth-admin
          file: uniauth-admin/deploy/dockerfile
          platforms: linux/amd64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Update Kubernetes manifest and commit changes
        run: |
          # 配置Git
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"

          # 克隆目标仓库（集群部署清单仓库）
          git clone https://${{ secrets.DEPLOY_REPO_TOKEN }}@github.com/${{ env.MANIFEST_REPO_OWNER }}/${{ env.MANIFEST_REPO_NAME }}.git manifest-repo
          cd manifest-repo

          # 切换到目标分支
          git checkout ${{ env.MANIFEST_DEPLOY_BRANCH }}
          # 更新Kubernetes清单
          MANIFEST_FILE="dev/dev-uniauth-admin.yaml"
          # Update image tag
          sed -i "s|image: ghcr.io/cuhksz-itso-dev/uniauth-admin:.*|image: ghcr.io/cuhksz-itso-dev/uniauth-admin:${{ env.TAG }}|" ${MANIFEST_FILE}

          # 提交并推送更改到目标仓库
          git add ${MANIFEST_FILE}
          git commit -m "Update ${MANIFEST_FILE} to ${{ env.TAG }}"
          git push origin ${{ env.MANIFEST_DEPLOY_BRANCH }}
